package com.cg.service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Service;

import com.cg.model.Product;
import com.cg.repository.ProductRepository;
import com.cg.repository.UserInfoRepository;

import jakarta.annotation.PostConstruct;

@Service
public class ProductService implements IProductService{

	@Autowired
	ProductRepository productrepo;
	
	
	@Autowired
    private UserInfoRepository repository;
 
    @Autowired
    private PasswordEncoder passwordEncoder;
 
    @PostConstruct
    public void loadProductsFromDB() {
        productList = IntStream.rangeClosed(1, 100)
                .mapToObj(i -> Product.builder()
                        .productId(i)
                        .name("product " + i)
                        .qty(new Random().nextInt(10))
                        .price(new Random().nextInt(5000)).build()
                ).collect(Collectors.toList());
    }
	@Override
	public List<Product> findAllProducts() {
		return productrepo.findAll();
		
	}
	
	public Optional<Product> findProductById(int pid) {
		return productrepo.findById(pid);
	}

	
	public Product CreateProduct(Product p) {
		return productrepo.save(p);
	}
	public String DeleteProductbyId(int pid) {
		if (productrepo.existsById(pid)) {
			productrepo.deleteById(pid);;
	         return "deleted";
	    } else {
	    	 return "id not found";
	    }
	}
	public Product UpdateData(Product p) {	
		return productrepo.save(p);
	}
	@Override
	public List<Product >getProductByName(String Pname){
		return productrepo.findAllByPname(Pname);
	}
	@Override
	public int getCountByProduct(String pname) {
		return productrepo.getCountByProduct(pname);
	}
}






